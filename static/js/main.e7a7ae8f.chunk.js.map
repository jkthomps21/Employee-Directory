{"version":3,"sources":["components/Header.js","components/THeader.js","components/TButtons.js","components/TBody.js","components/Arrows.js","components/Container.js","App.js","index.js"],"names":["Header","props","className","type","placeholder","aria-label","aria-describedby","value","form","onChange","handleInputChange","id","onClick","handleFormSubmit","clearForm","THeader","children","TButtons","scope","sortingButton","name","TBody","items","tableContents","map","item","values","Object","rowBody","i","length","push","key","Arrows","width","height","viewBox","fill","xmlns","fillRule","d","Container","state","sortBy","sortOrder","filter","seed","employees","event","target","setState","preventDefault","itemSortBy","console","log","order","a","b","hasOwnProperty","itemA","toUpperCase","itemB","compareItems","tArray","this","tInstance","keys","header","forEach","tFilter","toString","toLowerCase","includes","sort","itemSorter","tableHeaderConfig","tableBodyConfig","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7a7ae8f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n\n    return (\n        <header>\n            <h1 className=\"display-4 text-center p-2 m-4\">Employee Directory</h1>\n            <div className=\"row mx-2\">\n                <div className=\"input-group mb-3 pl-0 pl-sm-2 col\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search\"\n                        aria-label=\"Search\"\n                        aria-describedby=\"searchSubmit\"\n                        value={props.form}\n                        onChange={props.handleInputChange}\n                    ></input>\n                    <button className=\"btn btn-info\" type=\"button\" id=\"searchSubmit\" onClick={props.handleFormSubmit}>Search</button>\n                </div>\n                <button className=\"btn btn-outline-info col-sm-2 col-md-2 col-lg-2 mb-3\" type=\"button\" id=\"clearForm\" onClick={props.clearForm}>Reset</button>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction THeader(props) {\n\n    return (\n        <thead>\n            <tr>\n                {props.children}\n            </tr>\n        </thead>\n    );\n}\n\nexport default THeader;","import React from \"react\";\n\nfunction TButtons(props) {\n\n    return (\n        <th scope=\"col\">\n            <button\n                type=\"button\"\n                className=\"btn btn-sm filter\"\n                onClick={() => props.sortingButton(props.name)}\n            >\n                <span className=\"table-header\">{props.name}</span>\n                {props.children}\n            </button>\n        </th>\n    );\n}\n\nexport default TButtons;","import React from \"react\";\n\nfunction TBody({tableContents}) {\n\n    let items = tableContents.map(item => {\n        let values = Object.values(item);\n        let rowBody = [];\n        for (let i = 1; i < values.length; i++) {  \n            let value = values[i] || \"-\";\n            rowBody.push(<td key={value}>{value}</td>)\n        }\n        let row = \n            <tr key={values[0]}>\n                <th scope=\"row\">{values[0]}</th>\n                {rowBody}\n            </tr>;\n        return row;\n    })\n\n    return (\n        <tbody>\n            {items}\n        </tbody>\n    );\n}\n\nexport default TBody;","import React from \"react\";\n\nfunction Arrows() {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-down-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M11 3.5a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\"/>\n            <path fillRule=\"evenodd\" d=\"M10.646 2.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L11 3.707 8.354 6.354a.5.5 0 1 1-.708-.708l3-3zm-9 7a.5.5 0 0 1 .708 0L5 12.293l2.646-2.647a.5.5 0 1 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\n            <path fillRule=\"evenodd\" d=\"M5 2.5a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0V3a.5.5 0 0 1 .5-.5z\"/>\n        </svg>\n    ); \n}\n\nexport default Arrows;","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport THeader from \"./THeader\";\nimport TButtons from \"./TButtons\";\nimport TBody from \"./TBody\";\nimport Arrows from \"./Arrows\";\nimport employees from \"../employeesSeed.json\";\nimport \"./style.css\";\n\nclass Container extends Component {\n\n    state = {\n        sortBy: \"id\",\n        sortOrder: \"asc\",\n        filter: \"\",\n        form: \"\",\n        seed: employees\n    };\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        this.setState({\n            form: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.form) {\n            this.setState({\n                filter: this.state.form,\n                form: \"\"\n            });\n        } else {\n            // Give a warning? Possibly?\n        }\n    };\n\n    clearForm = event => {\n        event.preventDefault();\n        this.setState({\n            form: \"\",\n            filter: \"\"\n        });\n    }\n\n    // Add a sort method? Found dynamic sorting method on sitepoint.com\n    itemSorter(key, order = 'asc') {\n        return function innerSort(a,b) {\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n                // if property doesn't exist on either object\n                return 0;\n            }\n\n            const itemA = (typeof a[key] === 'string')\n                ? a[key].toUpperCase() : a[key];\n            const itemB = (typeof b[key] === 'string')\n                ? b[key].toUpperCase() : b[key];\n\n            let compareItems = 0;\n            if (itemA > itemB) {\n                compareItems = 1;\n            } else if (itemA < itemB) {\n                compareItems = -1;\n            }\n            return (\n                (order === 'desc') ? (compareItems * -1) : compareItems\n            );\n        };\n    }\n    \n    \n    tableHeaderConfig() {\n        const tArray = Object.values(this.state.seed);\n        const tInstance = Object.keys(tArray[0]);\n        let header = [];\n        tInstance.forEach(value => {\n            header.push(\n                <TButtons key={value} name={value} sortingButton={this.sortingButton}>\n                    <Arrows />\n                </TButtons>\n            )\n        });\n        return header;\n    }\n    \n    tableBodyConfig() {\n        const tArray = Object.values(this.state.seed);\n        const tFilter = [];\n        for (const i of tArray) {\n            if (Object.values(i).toString().toLowerCase().includes((this.state.filter).toLowerCase()) || !this.state.filter) {\n                tFilter.push(i);\n            }\n        }\n        const tSort = tFilter.sort(this.itemSorter(this.state.sortBy, this.state.sortOrder));\n        return (tSort);\n    }\n    \n    // Add a sort button?\n    sortingButton = (itemSortBy) => {\n        if (itemSortBy === this.state.sortBy) {\n            if (this.state.sortOrder === \"asc\") {\n                this.setState({ sortOrder: \"desc\" });\n                console.log(this.state.sortOrder);\n            } else {\n                this.setState({ sortOrder: \"asc\" });\n                console.log(this.state.sortOrder);\n            }\n        } else {\n            this.setState({\n                sortOrder: \"asc\",\n                sortBy: itemSortBy\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header\n                    form={this.state.form}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                    clearForm={this.clearForm}\n                ></Header>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                        <THeader>\n                            {this.tableHeaderConfig()}\n                        </THeader>\n                        <TBody tableContents={this.tableBodyConfig()}></TBody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Container;","import React from 'react';\nimport Container from './components/Container';\n\n\nfunction App() {\n  return <Container />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}